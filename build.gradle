apply plugin: 'java'

sourceCompatibility = 1.8
version = '0.1.0'

repositories {
    mavenCentral()
}

dependencies {
    compile fileTree(dir: 'libs/', include: '*.jar')
    compile     group: 'org.apache.httpcomponents', name: 'httpclient',         version: '4.3.3'
    compile     group: 'org.codehaus.jackson',      name: 'jackson-mapper-asl', version: '1.9.+'
    compile     group: 'org.slf4j',                 name: 'slf4j-api',          version: '1.7.+'
    testCompile group: 'org.slf4j',                 name: 'slf4j-simple',       version: '1.7.+'
    testCompile group: 'org.testng',                name: 'testng',             version: '6.1.1'
}

task updateEndpoints(type: JavaExec, dependsOn: build) {
    main = "net.dean.jraw.endpointgen.EndpointAnalysis"
    classpath = sourceSets.main.runtimeClasspath
}

test {
    // TestNG instead of default JUnit
    useTestNG()

    // Show stderr and stdout (useful for exceptions)
    testLogging.showStandardStreams = true
}

jar {
    destinationDir = new File(project.buildDir, "releases")
}

// Calling this task will Jar the classes and gzip the sources
task release(type: Tar, dependsOn: jar) {
    compression = Compression.GZIP
    baseName = project.name
    appendix = "src"
    destinationDir = new File(project.buildDir, "releases")
    from("src")
}

defaultTasks "test"
